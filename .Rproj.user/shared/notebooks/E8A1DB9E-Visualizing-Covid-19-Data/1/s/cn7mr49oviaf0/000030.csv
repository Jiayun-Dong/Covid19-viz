"0",""
"0","project_state = function(state_name){"
"0","  "
"0","  # t is the index for date (relative to the outbreak and y is the actual cumulative deaths"
"0","  t = df_trajectory %>% filter(state == state_name) %>% pull(day)"
"0","  y = df_trajectory %>% filter(state == state_name) %>% pull(death)"
"0","  outbreak = (df_trajectory %>% filter(state == state_name) %>% pull(date))[1]"
"0","  "
"0","  # want to fit this simple death dynamics: "
"0","  #    assume it has the shape of the CDF of a normal distribution (mu, sigma), scaled by total number of death (alpha)"
"0","  death_curve = function(x, param) param[3] * pnorm((x - param[1])/param[2])"
"0","  "
"0","  # least square loss"
"0","  loss = function(param){"
"0","    yhat = death_curve(t, param)"
"0","    return(sum((y - yhat)^2))"
"0","  }"
"0","  "
"0","  # initial parameter"
"0","  sigma = 10"
"0","  mu = 30"
"0","  alpha = 2000"
"0","  param0 = c(mu, sigma, alpha)"
"0","  "
"0","  # optimization"
"0","  output = parm_star = optimx(par = param0, loss, lower = c(0,0.01,0), upper = c(300, 1000, 100000))"
"0","  "
"0","  # result"
"0","  param = c(output$p1, output$p2, output$p3)"
"0","  peak = as.Date(outbreak + output$p1)"
"0","  total = round(output$p3)"
"0","  projection <- data.frame(d = as.Date(0:100 + outbreak), yhat = NA)"
"0","  projection$yhat <- death_curve(0:100, param)"
"0","  "
"0","  "
"0","  ggplot(data = projection, aes(x = d, y = yhat)) +"
"0","    geom_line(aes(color = ""projection""), linetype = ""dashed"", show.legend = FALSE) +"
"0","    geom_line(data = df_trajectory %>% filter(state == state_name), aes(x = date, y = death, color = ""actual trajectory"")) +"
"0","    scale_x_date(breaks = '15 days') +"
"0","    scale_y_continuous(labels = scales::comma) +"
"0","    scale_color_manual(values = c(""darkred"", ""grey"")) +"
"0","    ylab(""Number of deaths"") + xlab(""date"") +"
"0","    theme_minimal() +"
"0","    theme(legend.position = ""bottom"", legend.title = element_blank(), "
"0","            axis.title.x = element_blank(), axis.title.y = element_blank()) +"
"0","    ggtitle(paste0(""Actual and Projected Trajectory for "", state_name, ""\nProjected Peak: "", peak, "", Total Deaths: "", total))"
"0","  }"
"0",""
